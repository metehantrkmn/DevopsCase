
name: Deploy JavaScript App to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up kubectl and configure it to use the kubeconfig from GitHub secrets
      - name: Set up Kubernetes
        uses: actions/setup-kubectl@v2
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}  # Use the kubeconfig secret

      # Step 3: Set up ngrok to expose local Kubernetes cluster
      - name: Set up ngrok to expose local Kubernetes cluster
        run: |
          export NGROK_URL=${{ secrets.NGROK_URL }}
          kubectl config set-cluster docker-desktop --server=https://$NGROK_URL --insecure-skip-tls-verify=true
          kubectl config use-context docker-desktop

      # Step 4: Build the Docker image for your JavaScript application
      - name: Build Docker image
        run: |
          docker build -t 2048:latest .

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Step 6: Tag the image for Docker Hub and push to the repository
      - name: Tag and Push Docker image to Docker Hub
        run: |
          docker tag 2048:latest metehan1171/devops-case:latest  # Replace with your Docker Hub username and image name
          docker push metehan1171/devops-case:latest  # Replace with your Docker Hub username and image name

            # Step 5: Apply Kubernetes resources (deployment, service, ingress, etc.)
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/ingress.yaml  # If you have an ingress resource
          
